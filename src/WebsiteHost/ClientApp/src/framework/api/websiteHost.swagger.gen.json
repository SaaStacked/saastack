{
  "openapi": "3.0.4",
  "info": {
    "title": "FrontendSite",
    "description": "FrontendSite",
    "version": "v1"
  },
  "paths": {
    "/api/auth": {
      "post": {
        "tags": [
          "AuthenticationApi"
        ],
        "summary": "Authenticates the user with the specified provider, using either an auth code or a username and password.",
        "description": "(request type: AuthenticateRequest)",
        "operationId": "Authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The user's credentials are invalid"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "When the user has authenticated with credentials, but has MFA enabled. The details of the error contains a value of \"mfa_required\"."
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "When the user has authenticated with credentials, but has not yet verified their registration"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "The user's account is suspended or disabled, and cannot be authenticated or used"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "AuthenticationApi"
        ],
        "summary": "Removes the current user's authenticated session (if any)",
        "description": "(request type: LogoutRequest)",
        "operationId": "Logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "AuthenticationApi"
        ],
        "summary": "Refreshes the current user's authentication session (if possible)",
        "description": "(request type: RefreshTokenRequest)",
        "operationId": "RefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The refresh token has expired"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "The user's account is suspended or disabled, and cannot be authenticated or used"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flags": {
      "get": {
        "tags": [
          "FeatureFlagsApi"
        ],
        "summary": "Lists all the available feature flags",
        "description": "(request type: GetAllFeatureFlagsRequest)",
        "operationId": "GetAllFeatureFlags",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFeatureFlagsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFeatureFlagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flags/{Name}": {
      "get": {
        "tags": [
          "FeatureFlagsApi"
        ],
        "summary": "Fetches the named feature flag for the current authenticated user",
        "description": "(request type: GetFeatureFlagForCallerRequest)",
        "operationId": "GetFeatureFlagForCaller",
        "parameters": [
          {
            "name": "Name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "HealthApi"
        ],
        "summary": "Displays the health of the API",
        "description": "(request type: HealthCheckRequest)",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/record/crash": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Records a crash event of the product",
        "description": "(request type: RecordCrashRequest)",
        "operationId": "RecordCrash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordCrashRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/record/measure": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Measures an event in the product",
        "description": "(request type: RecordMeasureRequest)",
        "operationId": "RecordMeasure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordMeasureRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/record/page_view": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Records a page view event in the product",
        "description": "(request type: RecordPageViewRequest)",
        "operationId": "RecordPageView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPageViewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/record/trace": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Records a trace event in the product",
        "description": "(request type: RecordTraceRequest)",
        "operationId": "RecordTrace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordTraceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/record/use": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Records a usage of the product",
        "description": "(request type: RecordUseRequest)",
        "operationId": "RecordUse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordUseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/testingonly/direct/anonymous": {
      "post": {
        "tags": [
          "TestingOnlyApi"
        ],
        "summary": "An example of a request that uses NO authentication for a BEFFE endpoint, which can be called directly from another client (and not from the browser, which includes CSRF protection).",
        "description": "(request type: BeffeAnonymousDirectTestingOnlyRequest)",
        "operationId": "BeffeAnonymousDirectTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeffeAnonymousDirectTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/testingonly/anonymous": {
      "post": {
        "tags": [
          "TestingOnlyApi"
        ],
        "summary": "An example of a request that uses NO authentication for a BEFFE endpoint",
        "description": "(request type: BeffeAnonymousTestingOnlyRequest)",
        "operationId": "BeffeAnonymousTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeffeAnonymousTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/testingonly/direct/hmac": {
      "post": {
        "tags": [
          "TestingOnlyApi"
        ],
        "summary": "An example of a request that uses HMAC authentication for a BEFFE endpoint, which can be called directly from another client (and not from the browser, which includes CSRF protection).",
        "description": "(request type: BeffeHMacDirectTestingOnlyRequest)",
        "operationId": "BeffeHMacDirectTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeffeHMacDirectTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BeffeTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get the requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "423": {
            "description": "Locked: The current resource is locked and cannot be accessed"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticateRequest": {
        "required": [
          "provider"
        ],
        "type": "object",
        "properties": {
          "authCode": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResponse": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeffeAnonymousDirectTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BeffeAnonymousTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BeffeHMacDirectTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "BeffeTestingOnlyResponse": {
        "required": [
          "callerId"
        ],
        "type": "object",
        "properties": {
          "callerId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmptyResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "FeatureFlag": {
        "required": [
          "isEnabled",
          "name"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetAllFeatureFlagsResponse": {
        "required": [
          "flags"
        ],
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureFlag"
            }
          }
        },
        "additionalProperties": false
      },
      "GetFeatureFlagResponse": {
        "required": [
          "flag"
        ],
        "type": "object",
        "properties": {
          "flag": {
            "$ref": "#/components/schemas/FeatureFlag"
          }
        },
        "additionalProperties": false
      },
      "HealthCheckResponse": {
        "required": [
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LogoutRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "ProblemDetails": {
        "required": [
          "detail",
          "instance",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        },
        "additionalProperties": { }
      },
      "RecordCrashRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecordMeasureRequest": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "additional": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "eventName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecordPageViewRequest": {
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecordTraceRequest": {
        "required": [
          "level",
          "messageTemplate"
        ],
        "type": "object",
        "properties": {
          "arguments": {
            "type": "array",
            "items": {
              "required": [
                "chars",
                "length"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "level": {
            "minLength": 1,
            "type": "string"
          },
          "messageTemplate": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecordUseRequest": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "additional": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "eventName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "type": "object",
        "additionalProperties": false
      }
    }
  }
}