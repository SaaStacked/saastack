// This file is auto-generated by @hey-api/openapi-ts

export const AuthenticateRequestSchema = {
  required: ['provider'],
  type: 'object',
  properties: {
    authCode: {
      type: 'string',
      nullable: true
    },
    password: {
      type: 'string',
      nullable: true
    },
    provider: {
      minLength: 1,
      type: 'string'
    },
    username: {
      type: 'string',
      nullable: true
    }
  },
  additionalProperties: false
} as const;

export const AuthenticateResponseSchema = {
  required: ['userId'],
  type: 'object',
  properties: {
    userId: {
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const BeffeAnonymousDirectTestingOnlyRequestSchema = {
  type: 'object',
  additionalProperties: false
} as const;

export const BeffeAnonymousTestingOnlyRequestSchema = {
  type: 'object',
  additionalProperties: false
} as const;

export const BeffeHMacDirectTestingOnlyRequestSchema = {
  type: 'object',
  additionalProperties: false
} as const;

export const BeffeTestingOnlyResponseSchema = {
  required: ['callerId'],
  type: 'object',
  properties: {
    callerId: {
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const EmptyResponseSchema = {
  type: 'object',
  additionalProperties: false
} as const;

export const FeatureFlagSchema = {
  required: ['isEnabled', 'name'],
  type: 'object',
  properties: {
    isEnabled: {
      type: 'boolean'
    },
    name: {
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const GetAllFeatureFlagsResponseSchema = {
  required: ['flags'],
  type: 'object',
  properties: {
    flags: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/FeatureFlag'
      }
    }
  },
  additionalProperties: false
} as const;

export const GetFeatureFlagResponseSchema = {
  required: ['flag'],
  type: 'object',
  properties: {
    flag: {
      $ref: '#/components/schemas/FeatureFlag'
    }
  },
  additionalProperties: false
} as const;

export const HealthCheckResponseSchema = {
  required: ['name', 'status'],
  type: 'object',
  properties: {
    name: {
      type: 'string'
    },
    status: {
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const LogoutRequestSchema = {
  type: 'object',
  additionalProperties: false
} as const;

export const ProblemDetailsSchema = {
  required: ['detail', 'instance', 'title', 'type'],
  type: 'object',
  properties: {
    type: {
      type: 'string'
    },
    title: {
      type: 'string'
    },
    status: {
      type: 'integer',
      format: 'int32'
    },
    detail: {
      type: 'string'
    },
    instance: {
      type: 'string'
    }
  },
  additionalProperties: {}
} as const;

export const RecordCrashRequestSchema = {
  required: ['message'],
  type: 'object',
  properties: {
    message: {
      minLength: 1,
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const RecordMeasureRequestSchema = {
  required: ['eventName'],
  type: 'object',
  properties: {
    additional: {
      type: 'object',
      additionalProperties: {
        nullable: true
      },
      nullable: true
    },
    eventName: {
      minLength: 1,
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const RecordPageViewRequestSchema = {
  required: ['path'],
  type: 'object',
  properties: {
    path: {
      minLength: 1,
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const RecordTraceRequestSchema = {
  required: ['level', 'messageTemplate'],
  type: 'object',
  properties: {
    arguments: {
      type: 'object',
      additionalProperties: {
        nullable: true
      },
      nullable: true
    },
    level: {
      minLength: 1,
      type: 'string'
    },
    messageTemplate: {
      minLength: 1,
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const RecordUseRequestSchema = {
  required: ['eventName'],
  type: 'object',
  properties: {
    additional: {
      type: 'object',
      additionalProperties: {
        nullable: true
      },
      nullable: true
    },
    eventName: {
      minLength: 1,
      type: 'string'
    }
  },
  additionalProperties: false
} as const;

export const RefreshTokenRequestSchema = {
  type: 'object',
  additionalProperties: false
} as const;
