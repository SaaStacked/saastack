//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IdentityDomain {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IdentityDomain.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Description is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidDescription {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API key is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidKey {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hash of the API key is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidKeyHash {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidKeyHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API key has been set for this user yet.
        /// </summary>
        internal static string ApiKeyKeep_NoApiKeyHash {
            get {
                return ResourceManager.GetString("ApiKeyKeep_NoApiKeyHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expiry date cannot be less than one hour into the future.
        /// </summary>
        internal static string APIKeyRoot_ExpiresOnTooSoon {
            get {
                return ResourceManager.GetString("APIKeyRoot_ExpiresOnTooSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user is not a member of the operations team.
        /// </summary>
        internal static string ApiKeyRoot_NotOperator {
            get {
                return ResourceManager.GetString("ApiKeyRoot_NotOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must be an owner of this API key to perform this action.
        /// </summary>
        internal static string ApiKeyRoot_NotOwner {
            get {
                return ResourceManager.GetString("ApiKeyRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The is no API key to verify yet.
        /// </summary>
        internal static string APIKeyRoot_Verify_NoApiKey {
            get {
                return ResourceManager.GetString("APIKeyRoot_Verify_NoApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This token is not an encrypted value.
        /// </summary>
        internal static string AuthToken_InvalidEncryptedValue {
            get {
                return ResourceManager.GetString("AuthToken_InvalidEncryptedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This token value is not unencrypted.
        /// </summary>
        internal static string AuthToken_InvalidPlainValue {
            get {
                return ResourceManager.GetString("AuthToken_InvalidPlainValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token is unknown.
        /// </summary>
        internal static string AuthTokensRoot_RefreshTokenDigestNotMatched {
            get {
                return ResourceManager.GetString("AuthTokensRoot_RefreshTokenDigestNotMatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token has expired.
        /// </summary>
        internal static string AuthTokensRoot_RefreshTokenExpired {
            get {
                return ResourceManager.GetString("AuthTokensRoot_RefreshTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These tokens have already expired.
        /// </summary>
        internal static string AuthTokensRoot_TokensExpired {
            get {
                return ResourceManager.GetString("AuthTokensRoot_TokensExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token has been revoked.
        /// </summary>
        internal static string AuthTokensRoot_TokensRevoked {
            get {
                return ResourceManager.GetString("AuthTokensRoot_TokensRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cooldown period is either zero or too large.
        /// </summary>
        internal static string LoginMonitor_InvalidCooldownPeriod {
            get {
                return ResourceManager.GetString("LoginMonitor_InvalidCooldownPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The max failed logins is either too large or negative.
        /// </summary>
        internal static string LoginMonitor_InvalidMaxFailedLogins {
            get {
                return ResourceManager.GetString("LoginMonitor_InvalidMaxFailedLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recovery codes required to associate Recovery Codes.
        /// </summary>
        internal static string MfaAuthenticator_Associate_NoRecoveryCodes {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Associate_NoRecoveryCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An email address is required to associate OOB with Email.
        /// </summary>
        internal static string MfaAuthenticator_Associate_OobEmail_NoEmailAddress {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Associate_OobEmail_NoEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A phone number is required to associate OOB with SMS.
        /// </summary>
        internal static string MfaAuthenticator_Associate_OobSms_NoPhoneNumber {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Associate_OobSms_NoPhoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An email address is required to associate OTP Authenticator.
        /// </summary>
        internal static string MfaAuthenticator_Associate_OtpAuthenticator_NoUsername {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Associate_OtpAuthenticator_NoUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This authenticator cannot be challenged.
        /// </summary>
        internal static string MfaAuthenticator_Challenge_InvalidAuthenticator {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Challenge_InvalidAuthenticator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authenticator must be confirmed before being challenged.
        /// </summary>
        internal static string MfaAuthenticator_Challenge_NotConfirmed {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Challenge_NotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot confirm this type of authenticator.
        /// </summary>
        internal static string MfaAuthenticator_ConfirmAssociation_InvalidType {
            get {
                return ResourceManager.GetString("MfaAuthenticator_ConfirmAssociation_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authenticator cannot be confirmed.
        /// </summary>
        internal static string MfaAuthenticator_ConfirmAssociation_NotAssociated {
            get {
                return ResourceManager.GetString("MfaAuthenticator_ConfirmAssociation_NotAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot verify this type of authenticator.
        /// </summary>
        internal static string MfaAuthenticator_Verify_InvalidType {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Verify_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authenticator must be confirmed before being verified.
        /// </summary>
        internal static string MfaAuthenticator_Verify_NotVerifiable {
            get {
                return ResourceManager.GetString("MfaAuthenticator_Verify_NotVerifiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA authentication failed.
        /// </summary>
        internal static string MfaOptions_AuthenticationFailed {
            get {
                return ResourceManager.GetString("MfaOptions_AuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA authentication has not been initiated yet.
        /// </summary>
        internal static string MfaOptions_AuthenticationNotInitiated {
            get {
                return ResourceManager.GetString("MfaOptions_AuthenticationNotInitiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA authentication session has expired.
        /// </summary>
        internal static string MfaOptions_AuthenticationTokenExpired {
            get {
                return ResourceManager.GetString("MfaOptions_AuthenticationTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change whether you can disable MFA or not.
        /// </summary>
        internal static string MfaOptions_CannotChangeCanBeDisabled {
            get {
                return ResourceManager.GetString("MfaOptions_CannotChangeCanBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA cannot be disabled.
        /// </summary>
        internal static string MfaOptions_Change_CannotBeDisabled {
            get {
                return ResourceManager.GetString("MfaOptions_Change_CannotBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA cannot be enabled.
        /// </summary>
        internal static string MfaOptions_Change_CannotBeEnabled {
            get {
                return ResourceManager.GetString("MfaOptions_Change_CannotBeEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA is not enabled for this user.
        /// </summary>
        internal static string MfaOptions_NotEnabled {
            get {
                return ResourceManager.GetString("MfaOptions_NotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA authentication session must have expiry.
        /// </summary>
        internal static string MfaOptions_TokenWithoutExpiry {
            get {
                return ResourceManager.GetString("MfaOptions_TokenWithoutExpiry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must consent to the &apos;openid&apos; scope.
        /// </summary>
        internal static string OAuth2ClientConsentRoot_MissingOpenIdScope {
            get {
                return ResourceManager.GetString("OAuth2ClientConsentRoot_MissingOpenIdScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change the consent for another user.
        /// </summary>
        internal static string OAuth2ClientConsentRoot_NotOwner {
            get {
                return ResourceManager.GetString("OAuth2ClientConsentRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This first four of the secret is not valid.
        /// </summary>
        internal static string OAuth2ClientSecret_InvalidFirstFour {
            get {
                return ResourceManager.GetString("OAuth2ClientSecret_InvalidFirstFour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This secret is not valid.
        /// </summary>
        internal static string OAuth2ClientSecret_InvalidSecret {
            get {
                return ResourceManager.GetString("OAuth2ClientSecret_InvalidSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This secret hash is not valid.
        /// </summary>
        internal static string OAuth2ClientSecret_InvalidSecretHash {
            get {
                return ResourceManager.GetString("OAuth2ClientSecret_InvalidSecretHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret has expired.
        /// </summary>
        internal static string OAuth2ClientSecrets_SecretExpired {
            get {
                return ResourceManager.GetString("OAuth2ClientSecrets_SecretExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret does not exist for this client.
        /// </summary>
        internal static string OAuth2ClientSecrets_UnknownSecret {
            get {
                return ResourceManager.GetString("OAuth2ClientSecrets_UnknownSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scope is unknown.
        /// </summary>
        internal static string OAuth2Scopes_InvalidScope {
            get {
                return ResourceManager.GetString("OAuth2Scopes_InvalidScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This token is not a digested value.
        /// </summary>
        internal static string OAuth2TokenMemento_InvalidDigestValue {
            get {
                return ResourceManager.GetString("OAuth2TokenMemento_InvalidDigestValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This token value is not undigested.
        /// </summary>
        internal static string OAuth2TokenMemento_InvalidPlainValue {
            get {
                return ResourceManager.GetString("OAuth2TokenMemento_InvalidPlainValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CodeChallenge has not defined a method.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootGenerateCode_CodeChallengeMissingMethod {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootGenerateCode_CodeChallengeMissingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect URI does not match the client.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootGenerateCode_MismatchedClientRedirectUri {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootGenerateCode_MismatchedClientRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect URI is missing for the client.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootGenerateCode_MissingClientRedirectUri {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootGenerateCode_MissingClientRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization is missing a &apos;ClientId&apos;.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootMissingClientId {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootMissingClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scope is missing the &apos;openid&apos; scope.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootMissingOpenIdScope {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootMissingOpenIdScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization is missing a &apos;RedirectUri&apos;.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootMissingRedirectUri {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootMissingRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization is missing a &apos;Scopes&apos;.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootMissingScopes {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootMissingScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization is missing a &apos;UserId&apos;.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootMissingUserId {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootMissingUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization has not been configured.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootNotConfigured {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Refresh token is expired.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootRefreshToken_RefreshForbidden {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootRefreshToken_RefreshForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Refresh token scopes must be a subset of the authorized scopes.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootRefreshToken_ScopesNotSubset {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootRefreshToken_ScopesNotSubset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization code has expired.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyCode_ExpiredAuthorizationCode {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyCode_ExpiredAuthorizationCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect URI does not match.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyCode_MismatchedRedirectUri {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyCode_MismatchedRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization has not been configured.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyCode_NotConfigured {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyCode_NotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code verifier is invalid.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyPkce_InvalidCodeVerifier {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyPkce_InvalidCodeVerifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Challenge was required when authorized.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyPkce_MissingCodeChallenge {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyPkce_MissingCodeChallenge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code verifier is required to verify code.
        /// </summary>
        internal static string OpenIdConnectAuthorizationRootVerifyPkce_MissingCodeVerifier {
            get {
                return ResourceManager.GetString("OpenIdConnectAuthorizationRootVerifyPkce_MissingCodeVerifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not valid.
        /// </summary>
        internal static string PasswordKeep_InvalidPassword {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password hash is not valid.
        /// </summary>
        internal static string PasswordKeep_InvalidPasswordHash {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidPasswordHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token is either missing or invalid.
        /// </summary>
        internal static string PasswordKeep_InvalidToken {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No password has yet been set for this user.
        /// </summary>
        internal static string PasswordKeep_NoPasswordHash {
            get {
                return ResourceManager.GetString("PasswordKeep_NoPasswordHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token has expired.
        /// </summary>
        internal static string PasswordKeep_TokenExpired {
            get {
                return ResourceManager.GetString("PasswordKeep_TokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token is invalid.
        /// </summary>
        internal static string PasswordKeep_TokensNotMatch {
            get {
                return ResourceManager.GetString("PasswordKeep_TokensNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This authenticator has already been associated.
        /// </summary>
        internal static string PersonCredentialRoot_AssociateMfaAuthenticator_AlreadyAssociated {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_AssociateMfaAuthenticator_AlreadyAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This authenticator cannot be associated.
        /// </summary>
        internal static string PersonCredentialRoot_AssociateMfaAuthenticator_InvalidType {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_AssociateMfaAuthenticator_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An authenticator has already been associated, you must challenge it.
        /// </summary>
        internal static string PersonCredentialRoot_AssociateMfaAuthenticator_MustChallenge {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_AssociateMfaAuthenticator_MustChallenge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authenticator has not yet been associated.
        /// </summary>
        internal static string PersonCredentialRoot_CompleteMfaAuthenticatorAssociation_NotFound {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_CompleteMfaAuthenticatorAssociation_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot delete the recovery codes for MFA.
        /// </summary>
        internal static string PersonCredentialRoot_DisassociateMfaAuthenticator_RecoveryCodesCannotBeDeleted {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_DisassociateMfaAuthenticator_RecoveryCodesCannotBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New password cannot be the same as old password.
        /// </summary>
        internal static string PersonCredentialRoot_DuplicatePassword {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_DuplicatePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email is already in use by another user.
        /// </summary>
        internal static string PersonCredentialRoot_EmailNotUnique {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_EmailNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not valid.
        /// </summary>
        internal static string PersonCredentialRoot_InvalidPassword {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MFA is not enabled for this user.
        /// </summary>
        internal static string PersonCredentialRoot_MfaNotEnabled {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_MfaNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This authenticator does not exist.
        /// </summary>
        internal static string PersonCredentialRoot_NoMfaAuthenticator {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_NoMfaAuthenticator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No password has yet been set for this user.
        /// </summary>
        internal static string PersonCredentialRoot_NoPassword {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_NoPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user is not a member of the operations team.
        /// </summary>
        internal static string PersonCredentialRoot_NotOperator {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_NotOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must be an owner of this user account to change MFA settings.
        /// </summary>
        internal static string PersonCredentialRoot_NotOwner {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initiate password reset before the user is registered.
        /// </summary>
        internal static string PersonCredentialRoot_PasswordInitiatedWithoutRegistration {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_PasswordInitiatedWithoutRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset confirmation has expired.
        /// </summary>
        internal static string PersonCredentialRoot_PasswordResetTokenExpired {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_PasswordResetTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration confirmation cannot be confirmed.
        /// </summary>
        internal static string PersonCredentialRoot_RegistrationNotVerifying {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_RegistrationNotVerifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration has not been verified yet.
        /// </summary>
        internal static string PersonCredentialRoot_RegistrationUnverified {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_RegistrationUnverified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration is already verified.
        /// </summary>
        internal static string PersonCredentialRoot_RegistrationVerified {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_RegistrationVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration confirmation window has expired.
        /// </summary>
        internal static string PersonCredentialRoot_RegistrationVerifyingExpired {
            get {
                return ResourceManager.GetString("PersonCredentialRoot_RegistrationVerifyingExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the user can update their own tokens.
        /// </summary>
        internal static string ProviderAuthTokensRoot_NotOwner {
            get {
                return ResourceManager.GetString("ProviderAuthTokensRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the user can update their own tokens.
        /// </summary>
        internal static string SSOUserRoot_NotOwner {
            get {
                return ResourceManager.GetString("SSOUserRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The verification token is either missing or invalid.
        /// </summary>
        internal static string VerificationKeep_InvalidToken {
            get {
                return ResourceManager.GetString("VerificationKeep_InvalidToken", resourceCulture);
            }
        }
    }
}
