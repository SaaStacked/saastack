//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infrastructure.Persistence.Common {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Infrastructure.Persistence.Common.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContainerName cannot be empty.
        /// </summary>
        internal static string AnyStore_EmptyContainerName {
            get {
                return ResourceManager.GetString("AnyStore_EmptyContainerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blob must have a content type.
        /// </summary>
        internal static string BlobStore_EmptyContentType {
            get {
                return ResourceManager.GetString("BlobStore_EmptyContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to notify new events for: {0}.
        /// </summary>
        internal static string EventNotifyingStoreExtensions_OnComplete_FailedToNotify {
            get {
                return ResourceManager.GetString("EventNotifyingStoreExtensions_OnComplete_FailedToNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing of changed events for {0} failed..
        /// </summary>
        internal static string EventSourcingDddCommandStore_PublishFailed {
            get {
                return ResourceManager.GetString("EventSourcingDddCommandStore_PublishFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write new events to event stream: {0}, events between version {1} and version {2} have not been entered into stream yet.
        /// </summary>
        internal static string EventStore_ConcurrencyVerificationFailed_MissingUpdates {
            get {
                return ResourceManager.GetString("EventStore_ConcurrencyVerificationFailed_MissingUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write new events to event stream: {0}, another process has updated the stream at the same time, since version {1}.
        /// </summary>
        internal static string EventStore_ConcurrencyVerificationFailed_StreamAlreadyUpdated {
            get {
                return ResourceManager.GetString("EventStore_ConcurrencyVerificationFailed_StreamAlreadyUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write new events to event stream: {0}, another process may have cleared the stream?.
        /// </summary>
        internal static string EventStore_ConcurrencyVerificationFailed_StreamReset {
            get {
                return ResourceManager.GetString("EventStore_ConcurrencyVerificationFailed_StreamReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aggregate does not have an Identifier.
        /// </summary>
        internal static string IEventSourcingDddCommandStore_SaveWithAggregateIdMissing {
            get {
                return ResourceManager.GetString("IEventSourcingDddCommandStore_SaveWithAggregateIdMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream has been previously deleted and cannot be revived.
        /// </summary>
        internal static string IEventSourcingDddCommandStore_StreamTombstoned {
            get {
                return ResourceManager.GetString("IEventSourcingDddCommandStore_StreamTombstoned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity cannot be updated as it is already deleted.
        /// </summary>
        internal static string ReadModelStore_DtoDeleted {
            get {
                return ResourceManager.GetString("ReadModelStore_DtoDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity has an empty identifier.
        /// </summary>
        internal static string ReadModelStore_MissingIdentifier {
            get {
                return ResourceManager.GetString("ReadModelStore_MissingIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Id cannot be empty.
        /// </summary>
        internal static string ReadModelStore_NoId {
            get {
                return ResourceManager.GetString("ReadModelStore_NoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity cannot be updated as it is already deleted.
        /// </summary>
        internal static string SnapshottingDddCommandStore_EntityDeleted {
            get {
                return ResourceManager.GetString("SnapshottingDddCommandStore_EntityDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity has an empty identifier.
        /// </summary>
        internal static string SnapshottingDddCommandStore_EntityMissingIdentifier {
            get {
                return ResourceManager.GetString("SnapshottingDddCommandStore_EntityMissingIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DTO cannot be updated as it is already deleted.
        /// </summary>
        internal static string SnapshottingStore_DtoDeleted {
            get {
                return ResourceManager.GetString("SnapshottingStore_DtoDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DTO has an empty identifier.
        /// </summary>
        internal static string SnapshottingStore_DtoMissingIdentifier {
            get {
                return ResourceManager.GetString("SnapshottingStore_DtoMissingIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} does not exist.
        /// </summary>
        internal static string StoreExtensions_InvalidJoinType {
            get {
                return ResourceManager.GetString("StoreExtensions_InvalidJoinType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} does not exist.
        /// </summary>
        internal static string TypeExtensions_InvalidType {
            get {
                return ResourceManager.GetString("TypeExtensions_InvalidType", resourceCulture);
            }
        }
    }
}
